{"version":3,"sources":["components/Home.js","reportWebVitals.js","index.js"],"names":["Home","useState","modalIsOpen","setIsOpen","selectedContact","setSelectedContact","data","dataList","setDataList","notification","setNotification","show","setShow","useEffect","timeId","setTimeout","clearTimeout","closeModal","updateValues","value","key","className","Row","Col","push","md","forEach","item","name","email","age","phone","street","onClick","editContact","getContactList","isOpen","onRequestClose","contentLabel","style","content","top","left","right","bottom","transform","editElement","type","defaultValue","onChange","e","target","Button","variant","color","getModalContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Switch","Route","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.732e6efb.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport './Home.css';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport data from './contacts.json';\r\nimport Modal from 'react-modal';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction Home() {\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [selectedContact, setSelectedContact] = useState('');\r\n  const [dataList, setDataList] = useState(data);\r\n  const [notification, setNotification] = useState('')\r\n  const [show, setShow] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const timeId = setTimeout(() => {\r\n      setShow(false)\r\n    }, 5000)\r\n\r\n    return () => {\r\n      clearTimeout(timeId)\r\n    }\r\n  });\r\n\r\n  const editContact = (key) => {\r\n    setSelectedContact(key);\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setSelectedContact('');\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const submitData = () => {\r\n    setSelectedContact('');\r\n    setIsOpen(false);\r\n    const result = dataList;\r\n    setDataList(result);\r\n    setShow(true);\r\n    setNotification('Contact has been updated');\r\n  };\r\n\r\n  const customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: '20%',\r\n      bottom: 'auto',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  };\r\n\r\n  const getContactList = () => {\r\n    const dataList = [];\r\n    dataList.push(\r\n      <Row className=\"headerContainer\">\r\n        <Col md={2}>Name</Col>\r\n        <Col md={3}>Email</Col>\r\n        <Col md={1}>Age</Col>\r\n        <Col md={2}>Contact Number</Col>\r\n        <Col md={3}>Street</Col>\r\n        <Col md={1}>Action</Col>\r\n      </Row>\r\n    );\r\n    data.forEach((item, key) => {\r\n      dataList.push(\r\n        <Row className=\"dataContainer\">\r\n          <Col md={2}>{item.name}</Col>\r\n          <Col md={3}>{item.email}</Col>\r\n          <Col md={1}>{item.age}</Col>\r\n          <Col md={2}>{item.phone}</Col>\r\n          <Col md={3}>{item.street}</Col>\r\n          <Col md={1} className=\"editIconContainer\"><EditIcon onClick={() => editContact(key)} className='iconStyle editIcon'/></Col>\r\n        </Row>\r\n      );\r\n    });\r\n    return (dataList);\r\n  };\r\n\r\n  const updateValues = (value, key) => {\r\n    const result = dataList;\r\n    dataList[selectedContact][key] = value;\r\n  };\r\n\r\n  const getModalContent = () => {\r\n    const editElement = [];\r\n    if (selectedContact !== '') {\r\n      editElement.push(<div className=\"modalContainer\">\r\n        <Row>\r\n          <Col md={6} className=\"editHeaderContainer\">Update Contact</Col>\r\n          <Col md={6}><CloseIcon onClick={() => closeModal()} className='iconStyle closeIcon'/></Col>\r\n          <Col md={4}>Name</Col><Col md={5}><input type=\"text\" name=\"name\" defaultValue={data[selectedContact].name} onChange={(e) => updateValues(e.target.value, 'name')}/> </Col>\r\n          <Col md={4}>Email</Col><Col md={5}><input type=\"text\" name=\"email\" defaultValue={data[selectedContact].email} onChange={(e) => updateValues(e.target.value, 'email')}/></Col>\r\n          <Col md={4}>Contact Number</Col><Col md={5}><input type=\"text\" name=\"contact\" defaultValue={data[selectedContact].phone} onChange={(e) => updateValues(e.target.value, 'phone')}/></Col>\r\n          <Col md={4}>Age</Col><Col md={5}><input type=\"number\" name=\"age\" defaultValue={data[selectedContact].age} onChange={(e) => updateValues(e.target.value, 'age')}/></Col>\r\n          <Col md={4}>Street</Col><Col md={5}><input type=\"text\" name=\"street\" defaultValue={data[selectedContact].street} onChange={(e) => updateValues(e.target.value, 'street')}/></Col>\r\n          <Col md={12} className=\"submitContainer\"><Button variant=\"contained\" color=\"primary\" onClick={() => { submitData();}}> Submit </Button> </Col>\r\n        </Row>\r\n      </div>);\r\n    }\r\n    return (editElement);\r\n  };\r\n\r\n  return(\r\n    <div className=\"mainHome\">\r\n      <Row className=\"mainHeader\">\r\n        <Col className=\"header\">\r\n          <h1>Your Contacts</h1>\r\n        </Col>\r\n      </Row>\r\n        {show && <div className=\"notificationContainer\">{notification}</div>}\r\n      <Row className=\"content\" >\r\n        <Col>{getContactList()}</Col>\r\n      </Row>\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n          onRequestClose={closeModal}\r\n          contentLabel=\"Example Modal\"\r\n          style={customStyles}\r\n        >\r\n          {getModalContent()}\r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './components/Home';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router , Route, Switch} from 'react-router-dom';\n\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route path=\"/\" component={Home} />\n    </Switch>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}